{
    "data": {
        "train_path": "../input/cat_in_dat2/train.csv",
        "test_path": "../input/cat_in_dat2/test.csv",
        "output_dir": ".",
        "type": "table",
        "pred_cols": ["target"],
        "id_col": "id",
        "delimiter": ","
    },
    "pre": {
        "train_mode": "clf",
        "table": {
            "adhoc_df": {
                "myfunc": "cat_in_dat2",
                "methods": [
                    "add_splited_ord_5",
                    "add_day_cyclic",
                    "add_month_cyclic"
                ]
            },
            "category_encoding": {
                "default": {
                    "model": "target"
                },
                "options": [
                    {
                        "columns": [
                            "bin_0",
                            "bin_1",
                            "bin_2",
                            "ord_0",
                            "day",
                            "month",
                            "day_sin",
                            "day_cos",
                            "month_sin",
                            "month_cos"
                        ],
                        "model": "target"
                    }
                ]
            },
            "adversarial_validation": {
                "scoring": "roc_auc",
                "model_config": {
                    "model": "log_reg",
                    "cv_select": "train_all",
                    "n_trials": 1,
                    "fit_params": {
                    },
                    "params": {
                        "max_iter": [2020],
                        "solver": ["lbfgs"],
                        "penalty": ["none"],
                        "fit_intercept": [true],
                        "n_jobs": [-1]
                    },
                    "pseudo": {
                        "threshold": 0.8
                    }
                },
                "threshold": 0.0,
                "add_column": true
            }
        },
        "image": {
        }
    },
    "fit": {
        "train_mode": "clf",
        "scoring": "roc_auc",
        "cv": {
            "fold": "stratifiedk",
            "num": 5
        },
        "modelname": "cat_in_dat2",
        "ensemble_model_config": {
            "mode": "average",
            "model": "log_reg",
            "k": 10,
            "proportion": 0.2
        },
        "single_model_configs": [
            {
                "model": "log_reg",
                "undersampling": "bagging",
                "cv_select": "train_all",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_iter": [2020],
                    "solver": ["lbfgs"],
                    "penalty": ["none"],
                    "fit_intercept": [true],
                    "n_jobs": [-1]
                },
                "pseudo": {
                    "threshold": 0.8
                }
            },
            {
                "model": "lgb_clf",
                "cv_select": "train_all",
                "n_trials": 1,
                "fit_params": {
                    "eval_metric": "auc",
                    "early_stopping_rounds": 1000
                },
                "params": {
                    "metric": ["auc"],
                    "num_rounds": [5000],
                    "learning_rate": [0.05],
                    "max_depth": [3],
                    "min_data_in_leaf": [12],
                    "feature_fraction": [0.1],
                    "is_unbalance": [true],
                    "boost_from_average": [false],
                    "reg_alpha": [1],
                    "reg_lambda": [1],
                    "seed": [42],
                    "n_jobs": [-1]
                }
            }
        ]
    },
    "post": {
        "myfunc": "cat_in_dat2",
        "methods": [
            "translate_proba2submission"
        ]
    },
    "notify": {
        "slack": "https://hooks.slack.com/services/hogehoge"
    }
}
